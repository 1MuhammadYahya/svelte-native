[{"html":"\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span id=\"this-is-a-community-project\" class=\"offset-anchor\"></span>\n\t\t\t\t\t\t\t<a href=\"guide#this-is-a-community-project\" class=\"anchor\" aria-hidden=\"true\"></a>\n\t\t\t\t\t\t\tThis is a community project\n\t\t\t\t\t\t</h3><p>Svelte Native is developed by members of the the Svelte community who wish to have the same smooth development experience on mobile devices as they have on the web. This project is not an officially supported product of either the NativeScript or Svelte projects.</p>\n<p>Yet.</p>\n","metadata":{"title":"Important note"},"subsections":[{"slug":"this-is-a-community-project","title":"This is a community project"}],"slug":"important-note","file":"0-important-note.md"},{"html":"\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span id=\"what-is-nativescript\" class=\"offset-anchor\"></span>\n\t\t\t\t\t\t\t<a href=\"guide#what-is-nativescript\" class=\"anchor\" aria-hidden=\"true\"></a>\n\t\t\t\t\t\t\tWhat is NativeScript?\n\t\t\t\t\t\t</h3><p> <a href=\"https://www.nativescript.org/\">NativeScript</a> is an open-source framework to develop apps on the Apple iOS and Android platforms. It is open source and can be found on <a href=\"https://github.com/nativescript/nativescript\">github</a></p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span id=\"what-is-svelte\" class=\"offset-anchor\"></span>\n\t\t\t\t\t\t\t<a href=\"guide#what-is-svelte\" class=\"anchor\" aria-hidden=\"true\"></a>\n\t\t\t\t\t\t\tWhat is Svelte?\n\t\t\t\t\t\t</h3><p><a href=\"https://svelte.technology\">Svelte</a> is a radical new approach to building user interfaces. Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app.</p>\n<p>Instead of using techniques like virtual DOM diffing, Svelte writes code that surgically updates the DOM when the state of your app changes.</p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span id=\"what-is-svelte-native\" class=\"offset-anchor\"></span>\n\t\t\t\t\t\t\t<a href=\"guide#what-is-svelte-native\" class=\"anchor\" aria-hidden=\"true\"></a>\n\t\t\t\t\t\t\tWhat is Svelte Native\n\t\t\t\t\t\t</h3><p>Svelte Native is a tool for building mobile applications. It combines NativeScript&#39;s access to the native platform views and Svelte&#39;s fast and efficient view updates to allow you to build native mobile experiences using tools such as HTML, CSS and Javascript.</p>\n<p><a href=\"/blog/svelte-goes-native\">Read the introductory blog post</a>.</p>\n<p><img src=\"/logos_combined.svg\" alt=\"NativeScript + Svelte = Svelte Native\"></p>\n","metadata":{"title":"Introduction"},"subsections":[{"slug":"what-is-nativescript","title":"What is NativeScript?"},{"slug":"what-is-svelte","title":"What is Svelte?"},{"slug":"what-is-svelte-native","title":"What is Svelte Native"}],"slug":"introduction","file":"00-introduction.md"},{"html":"\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span id=\"quick-start\" class=\"offset-anchor\"></span>\n\t\t\t\t\t\t\t<a href=\"guide#quick-start\" class=\"anchor\" aria-hidden=\"true\"></a>\n\t\t\t\t\t\t\tQuick Start\n\t\t\t\t\t\t</h3><h4>Install Nativescript</h4><p>Svelte-Native works on top of NativeScript. To install NativeScript:</p>\n<div class='code-block'><pre class='language-bash'><code>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g nativescript</code></pre></div><p>Check it worked by running <code>tns</code></p>\n<p><img src=\"/media/tns-success.png\" alt=\"Success\"></p>\n<h4>Install the NativeScript Playground app</h4><p>Svelte-Native really is native, so it needs a mobile device to run. The build setup for iOS or Android can be a pain, so the wizards at Progress have created the NativeScript playground app. This allows us to run Svelte-Native application code without having to build the full mobile application.</p>\n<p><a href=\"https://itunes.apple.com/us/app/nativescript-playground/id1263543946?mt=8&amp;ls=1\"><img src=\"/media/app-store.png\" alt=\"Get if rom the App Store\"></a>\n<a href=\"https://play.google.com/store/apps/details?id=org.nativescript.play\"><img src=\"/media/google-play.png\" alt=\"Get it from Google Play\"></a></p>\n<h4>Create a new Svelte-Native app</h4><p>The easiest way to get started is to use the <a href=\"https://github.com/halfnelson/svelte-native-template\">latest template app</a></p>\n<div class='code-block'><pre class='language-bash'><code>$ degit halfnelson/svelte-native-template myapp</code></pre></div><p>A fresh svelte-native app will be found in the <code>myapp</code> folder</p>\n<h4>Launch It</h4><p>Launch your app with:</p>\n<div class='code-block'><pre class='language-bash'><code>$ <span class=\"token function\">cd</span> myapp\n$ tns preview --bundle</code></pre></div><p>You will need to scan the ascii art QR code using the &quot;Playground&quot; app you installed previously.</p>\n<img src=\"/media/quick-start-screenshot.png\" width=200 alt=\"Running App\" >\n\n\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span id=\"advanced-install\" class=\"offset-anchor\"></span>\n\t\t\t\t\t\t\t<a href=\"guide#advanced-install\" class=\"anchor\" aria-hidden=\"true\"></a>\n\t\t\t\t\t\t\tAdvanced Install\n\t\t\t\t\t\t</h3><p>To compile your apps for distribution, you will need to use setup your system for local compilation.</p>\n<p>Svelte-Native runs on top of an unmodified NativeScript platform. Installation instructions for your operating system can be found in the <a href=\"https://docs.nativescript.org/start/quick-setup\">Native Script Guide</a></p>\n<p>Check you have the NativeScript build environment configured correctly by using the Nativescript doctor command:</p>\n<div class='code-block'><pre class='language-bash'><code>$  tns doctor</code></pre></div><p>Once that is happy you can do a full compile and launch of your application with</p>\n<div class='code-block'><pre class='language-bash'><code>$ tns run android --bundle</code></pre></div><p>or</p>\n<div class='code-block'><pre class='language-bash'><code>$ tns run ios --bundle</code></pre></div>","metadata":{"title":"Getting Started"},"subsections":[{"slug":"quick-start","title":"Quick Start"},{"slug":"advanced-install","title":"Advanced Install"}],"slug":"getting-started","file":"01-getting-started.md"},{"html":"\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span id=\"the-goal\" class=\"offset-anchor\"></span>\n\t\t\t\t\t\t\t<a href=\"guide#the-goal\" class=\"anchor\" aria-hidden=\"true\"></a>\n\t\t\t\t\t\t\tThe Goal\n\t\t\t\t\t\t</h3><p>Sometimes it can be easier to learn something if you have a goal to work towards. In this section we will build a Todo app with Svelte Native. It will have the following functionality:</p>\n<ul>\n<li>Basic design<ul>\n<li>Two-tab layout</li>\n<li>One tab shows active tasks and lets you add new tasks</li>\n<li>Second tab lists completed tasks</li>\n</ul>\n</li>\n<li>Basic functionality<ul>\n<li>Add tasks: Users can add tasks as text</li>\n<li>View tasks: Newly added tasks are listed as active and can be tapped</li>\n<li>Complete tasks: Tapping an active task shows an action dialog with options</li>\n<li>Delete tasks: Tapping an active or completed task shows an action dialog with options</li>\n</ul>\n</li>\n<li>Advanced design<ul>\n<li>Input and button for adding tasks are styled</li>\n<li>Tabs are styled</li>\n<li>Active tasks are styled</li>\n<li>Completed tasks are styled</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/media/nativescript-svelte-todo.gif\" alt=\"TodoApp\"></p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span id=\"prerequisites\" class=\"offset-anchor\"></span>\n\t\t\t\t\t\t\t<a href=\"guide#prerequisites\" class=\"anchor\" aria-hidden=\"true\"></a>\n\t\t\t\t\t\t\tPrerequisites\n\t\t\t\t\t\t</h3><p>Before you start, please ensure you have at least followed the <a href=\"#quick-start\">Quick Start Guide</a> and can get an application to run on your mobile device or emulator.</p>\n<p>This guide assumes a existing familiarity with the Svelte framework. Run through <a href=\"https://v3.svelte.technology/tutorial\">Svelte&#39;s excellent tutorial</a> to get up to speed.</p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span id=\"basic-design\" class=\"offset-anchor\"></span>\n\t\t\t\t\t\t\t<a href=\"guide#basic-design\" class=\"anchor\" aria-hidden=\"true\"></a>\n\t\t\t\t\t\t\tBasic Design\n\t\t\t\t\t\t</h3><p>We will start our from a fresh app template:</p>\n<div class='code-block'><pre class='language-bash'><code>$ degit halfnelson/svelte-native-template todoapp\n$ <span class=\"token function\">cd</span> todoapp\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span></code></pre></div><p>Remove the default <code>.btn</code> rule from <code>app.css</code> and set the contents of App.svelte to:</p>\n<div class='code-block named'><span class='filename'> App.svelte</span><pre class='language-markup'><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>page<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>actionBar</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>My Tasks<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>action-bar<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tabView</span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>100%<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">androidTabsPosition</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bottom<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tabViewItem</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>To Do<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">textWrap</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n\t\t\tThis tab will list active tasks and will let users add new tasks.\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tabViewItem</span><span class=\"token punctuation\">></span></span>\n\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tabViewItem</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Completed<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>This tab will list completed tasks for tracking.<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">textWrap</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tabViewItem</span><span class=\"token punctuation\">></span></span>\n\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tabView</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page</span><span class=\"token punctuation\">></span></span></code></pre></div><blockquote>\n<p><strong>NOTE</strong> Notice that all tags start with a lower case letter. This is different to other NativeScript implementations. The lower case letter lets the Svelte compiler know that these are NativeScript views and not Svelte components. Think of <code>&lt;page&gt;</code> and <code>&lt;actionBar&gt;</code> as just another set of application building blocks like <code>&lt;ul&gt;</code> and <code>&lt;div&gt;</code>.</p>\n</blockquote>\n<h4>What&#39;s all that then?</h4><p>The <code>&lt;page&gt;</code> element is the top-level user interface element of every Svelte-Native app. All other user interface elements are nested within.</p>\n<p>The <code>&lt;actionBar&gt;</code> element shows an action bar for the <code>&lt;page&gt;</code>. A <code>&lt;page&gt;</code> cannot contain more than one <code>&lt;actionBar&gt;</code>.</p>\n<p>Typically, after the <code>&lt;actionBar&gt;</code>, you will have navigation components (such as a drawer or a tab view) or layout components. These elements control the layout of your app and let you determine how to place other user interface elements inside.</p>\n<p>The class names on <code>page</code> and <code>actionBar</code> are to help with styling, the default stylesheet includes a reference to the NativeScript core theme. More information on the core theme can be found in the <a href=\"https://docs.nativescript.org/ui/theme\">Nativescript Docs</a></p>\n<p>The <code>&lt;label&gt;</code> tags have been used differently. One has the <code>text=</code> attribute, while the other has the text between the opening and closing tags. Plain text between tags will be automatically assigned to the <code>text</code> attribute of the tag.</p>\n<h4>Progress So Far</h4><p><img src=\"/media/todoapp/todo-basic-design-1.png\" alt=\"tab 1\" width=300> <img src=\"/media/todoapp/todo-basic-design-2.png\" alt=\"tab 2\" width=300></p>\n\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span id=\"basic-functionality-add-tasks\" class=\"offset-anchor\"></span>\n\t\t\t\t\t\t\t<a href=\"guide#basic-functionality-add-tasks\" class=\"anchor\" aria-hidden=\"true\"></a>\n\t\t\t\t\t\t\tBasic Functionality: Add Tasks\n\t\t\t\t\t\t</h3><p>We have our basic design, lets allow the user to add some tasks.</p>\n<p>Replace the contents of the first <code>&lt;tabViewItem&gt;</code> with:</p>\n<div class='code-block'><pre class='language-markup'><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stackLayout</span> <span class=\"token attr-name\">orientation</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>100%<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>100%<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>gridLayout</span> <span class=\"token attr-name\">columns</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>2*,*<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>100%<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>25%<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token comment\">&lt;!-- Configures the text field and ensures that pressing Return on the keyboard \n\t\t\t produces the same result as tapping the button. --></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textField</span> <span class=\"token attr-name\">col</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">row</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{textFieldValue}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">hint</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Type new task...<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">editable</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token attr-name\"><span class=\"token namespace\">on:</span>returnPress</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{onButtonTap}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">col</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">row</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Add task<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">on:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{onButtonTap}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>gridLayout</span><span class=\"token punctuation\">></span></span>\n\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>listView</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>list-group<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">items</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{todos}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">on:</span>itemTap</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{onItemTap}<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>75%</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Template</span> <span class=\"token attr-name\"><span class=\"token namespace\">let:</span>item</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{item.name}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>list-group-item-heading<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">textWrap</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Template</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>listView</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>stackLayout</span><span class=\"token punctuation\">></span></span></code></pre></div><p>and to the bottom of the file add a script tag:</p>\n<div class='code-block'><pre class='language-markup'><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n\t<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Template <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'svelte-native/components'</span>\n\n\t<span class=\"token keyword\">let</span> todos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token keyword\">let</span> textFieldValue <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">onItemTap</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Item with index: '</span> <span class=\"token operator\">+</span> args<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+</span> <span class=\"token string\">' tapped'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">onButtonTap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>textFieldValue <span class=\"token operator\">===</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Prevents users from entering an empty string.</span>\n\t  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"New task added: \"</span> <span class=\"token operator\">+</span> textFieldValue <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Logs the newly added task in the console for debugging.</span>\n\t  todos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> textFieldValue <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>todos<span class=\"token punctuation\">]</span> <span class=\"token comment\">// Adds tasks in the ToDo array. Newly added tasks are immediately shown on the screen.</span>\n\t  textFieldValue <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Clears the text field so that users can start adding new tasks immediately.</span>\n\t<span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div><h4>What did we just do?</h4><p>To allow the user to enter a todo item, we need to capture the name of the task. We did this by adding a <code>&lt;textField&gt;</code>. A <code>&lt;button&gt;</code> was added to submit the task and a <code>&lt;listView&gt;</code> to display the task.</p>\n<p>Since this functionality required adding 3 elements to the tabview, we use layouts to tell NativeScript where to place each item. <code>&lt;stackLayout&gt;</code> places items in a row either vertical or horizontal. We used it to place our input form above the <code>&lt;listView&gt;</code>. <code>&lt;gridView&gt;</code> is used to layout items in a predefined grid. It is used to place the <code>&lt;button&gt;</code> to the right and take up half the space of the <code>&lt;textInput&gt;</code>.</p>\n<p>The <code>&lt;listView&gt;</code> contains a <code>&lt;Template&gt;</code> which is a Svelte component used to render each item. The template component needs to be imported just like all Svelte components.</p>\n<p>When <code>onButtonTap</code> callback is fired, the code we added to the script element, will build a new <code>todos</code> array including the added item, and clear the text field. The <code>onItemTap</code> callback will just log which list item index was tapped using <code>console.log</code> which works fine in NativeScript.</p>\n<blockquote>\n<p><strong>NOTE</strong> <code>&lt;listView&gt;</code> will look for the first <code>&lt;Template&gt;</code> component in its children. The template component acts similar to a slot and will render its content for each item. This is exposed to the content as <code>item</code> via the <code>let:item</code> on the template element.</p>\n</blockquote>\n<h4>Progress So Far</h4><img alt=\"We can add items\" src=\"/media/todoapp/todo-add-item.png\" width=350>\n\n<p>It isn&#39;t pretty, but it works!</p>\n","metadata":{"title":"Your First App"},"subsections":[{"slug":"the-goal","title":"The Goal"},{"slug":"prerequisites","title":"Prerequisites"},{"slug":"basic-design","title":"Basic Design"},{"slug":"basic-functionality-add-tasks","title":"Basic Functionality: Add Tasks"}],"slug":"todo-app-example","file":"02-todo-app-example.md"},{"html":"<p>This documentation is still a work-in-progress, like Svelte Native itself. If there are particular things that are missing or could be improved, then <a href=\"https://github.com/halfnelson/svelte-native\">please raise an issue on GitHub</a>!</p>\n","metadata":{"title":"TODO..."},"subsections":[],"slug":"still-to-come","file":"99-still-to-come.md"}]